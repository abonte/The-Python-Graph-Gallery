{"version":3,"file":"component---src-pages-animation-js-5e7ddc8ea608a16aea03.js","mappings":"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","sources":["webpack://the-python-graph-gallery/./src/components/SEO.jsx","webpack://the-python-graph-gallery/./static/animations/gapminder-2.gif","webpack://the-python-graph-gallery/./static/animations/web-animation-with-text8.gif","webpack://the-python-graph-gallery/./static/graph/animated_chart.gif","webpack://the-python-graph-gallery/./src/pages/animation.js","webpack://the-python-graph-gallery/./static/graph/animated_volcano.gif"],"sourcesContent":["// made following the Gatsby Doc: https://www.gatsbyjs.com/docs/how-to/adding-common-features/adding-seo-component/\n\n// This component is called by every page of the website.\n// At the top of each page you will find a Head component export that calls this SEO component\n\n// The SEO component will add stuff like title, description, image, lang... in the head of the HTML page\n// AdThrive ads code is also added here\n\nimport React from 'react';\n\nexport const SEO = ({ title, seoDescription, keywords }) => {\n  return (\n    <>\n      <title>{title}</title>\n      <html lang=\"en\" />\n      <meta\n        name=\"description\"\n        content={seoDescription || 'How to build a chart with Python'}\n      />\n      <meta name=\"author\" content=\"Yan Holtz\" />\n      <meta\n        name=\"keywords\"\n        content={keywords || 'python, chart, graph, code, viz, dataviz'}\n      />\n\n      <meta property=\"og:site_name\" content=\"The Python Graph Gallery\" />\n      <meta\n        property=\"og:title\"\n        content={title + ' | The Python Graph Gallery'}\n      />\n      <meta\n        property=\"og:image\"\n        content=\"https://github.com/holtzy/The-Python-Graph-Gallery/blob/master/static/overview_PGG.png?raw=true\"\n      />\n      <meta property=\"og:description\" content={seoDescription} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content=\"@R_Graph_Gallery\" />\n    </>\n  );\n};\n","export default __webpack_public_path__ + \"static/gapminder-2-38452eb27642aa569017c36b245e7bfe.gif\";","export default __webpack_public_path__ + \"static/web-animation-with-text8-f5b909ae2c89fba13004d0c198920815.gif\";","export default __webpack_public_path__ + \"static/animated_chart-0fd2f52638ae6eba7482c9d89bbaffeb.gif\";","import React from 'react';\nimport TitleAndDescription from '../components/TitleAndDescription';\nimport Layout from '../components/Layout';\nimport Container from 'react-bootstrap/Container';\nimport Contact from '../components/Contact';\nimport Row from 'react-bootstrap/Row';\nimport ChartFamilySection from '../components/ChartFamilySection';\nimport { Link } from 'gatsby';\nimport { Matplotlib } from '../components/MiscellaneousLogos';\nimport { Button, Col } from 'react-bootstrap';\nimport CodeChunk from '../components/CodeChunk';\nimport Spacing from '../components/Spacing';\nimport gapminderGif from '../../static/animations/gapminder-2.gif';\nimport outerSpaceGIF from '../../static/animations/web-animation-with-text8.gif';\nimport basicScatterGif from '../../static/graph/animated_chart.gif';\nimport volcanoGif from '../../static/graph/animated_volcano.gif';\nimport { SEO } from '../components/SEO';\n\nconst chartDescription =\n  '<p>An animation is a sequence of <b>images displayed one after the other</b>. It is a powerful way to show a process or a <b>change over time</b>. This page shows how to build animated charts with Python and Matplotlib.</p>';\n\nconst quickCode = `# libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.animation import FuncAnimation\n\n# read the data (on the web)\ndata = pd.read_csv('https://raw.githubusercontent.com/holtzy/The-Python-Graph-Gallery/master/static/data/gapminderData.csv')\ndata['continent'] = pd.Categorical(data['continent'])\n\n# create animation\nfig, ax = plt.subplots(figsize=(10, 10), dpi=120)\ndef update(frame):\n    ax.clear()\n    yearly_data = data.loc[data.year == frame, :]\n    ax.scatter(\n        x=yearly_data['lifeExp'], \n        y=yearly_data['gdpPercap'], \n        s=yearly_data['pop']/100000,\n        c=yearly_data['continent'].cat.codes, \n        cmap=\"Accent\",\n    )\n    return ax\nani = FuncAnimation(fig, update, frames=data['year'].unique())\nani.save('quick-anim.gif', writer='imagemagick', fps=1)\n`;\nconst homebrewInstallCode = `brew install imagemagick`;\n\nexport const Head = () => (\n  <SEO\n    title=\"Animation\"\n    seoDescription=\"A collection of correlogram examples made with Python, coming with explanation and reproducible code\"\n  />\n);\n\nexport default function Correlogram() {\n  return (\n    <Layout isTocEnabled>\n      <TitleAndDescription title=\"Animation\" description={chartDescription} />\n\n      <Container>\n        <h2 id=\"Quick\">&#9201; Quick start</h2>\n        <Row className=\"align-items-center\">\n          <Col md={6}>\n            <p>\n              An animated chart can be build with <code>python</code> using the\n              <code>FuncAnimation()</code> function from matplotlib. We follow\n              these steps:\n            </p>\n            <ul>\n              <li>Load libraries</li>\n              <li>Open a dataset</li>\n              <li>\n                Define an <code>update</code> function used to build each frame\n                of the animation\n              </li>\n              <li>\n                Create the animation with <code>FuncAnimation()</code> and save\n                it with <code>save()</code>\n              </li>\n            </ul>\n          </Col>\n          <Col md={6}>\n            <Link to={'/341-python-gapminder-animation'}>\n              <img\n                src={gapminderGif}\n                alt=\"Animation with python\"\n                style={{ width: '100%' }}\n              />\n            </Link>\n          </Col>\n        </Row>\n        <CodeChunk>{quickCode}</CodeChunk>\n        <Link to=\"/341-python-gapminder-animation\">\n          <Button size=\"sm\">See code</Button>\n        </Link>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\">\n        <Container>\n          <h2 id=\"Install\">\n            How to install <code>Image Magick</code>\n          </h2>\n          <p>\n            Installing Image magick can be a nightmare. The official\n            documentation is{' '}\n            <a href=\"https://imagemagick.org/script/download.php\">here</a>. The\n            best way to install it if you're on Mac OS is to use{' '}\n            <a href=\"https://brew.sh\">Homebrew</a> as follow:\n          </p>\n          <CodeChunk>{homebrewInstallCode}</CodeChunk>\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <h2>Advanced use case</h2>\n        <Row className=\"align-items-center\">\n          <Col md={4}>\n            <p>\n              This <b>real life</b> example illustrates the power of animated\n              charts. The chart is a stacked area chart with a text that is\n              written <b>through the animation</b>.\n            </p>\n            <br />\n            <Link to=\"/web-animated-line-chart-with-annotation\">\n              <Button size=\"sm\">See code</Button>\n            </Link>\n          </Col>\n          <Col md={8}>\n            <Link to={'/web-animated-line-chart-with-annotation'}>\n              <img\n                src={outerSpaceGIF}\n                alt=\"Animation with python\"\n                style={{ width: '100%' }}\n              />\n            </Link>\n          </Col>\n        </Row>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"Matplotlib\">\n          <Matplotlib />\n          <code>Matplotlib</code> and <code>Image Magick</code>\n        </h2>\n        <p>\n          Let's start with a ver basic animated scatter plot made with{' '}\n          <code>python</code>, <code>matplotlib</code>\n          and <code>image magick</code>. The <code>scatter()</code> function is\n          used to build a <Link to=\"/scatter-plot\">scatterplot</Link> at each\n          iteration of a loop. <code>savefig()</code> is used to save each chart\n          at <code>.png</code> format. Finally,\n          <code>image magick builds</code> the gif.\n        </p>\n        <Link to={'/340-scatterplot-animation'}>\n          <img\n            src={basicScatterGif}\n            alt=\"Basic animated scatterplot with python\"\n            style={{ maxWidth: '400px', width: '100%' }}\n          />\n        </Link>\n        <p>\n          The process is pretty much the same for a 3d chart. Here is an example\n          with an animated volcano plot. Each iteration of the loop changes the\n          camera angle, giving this feeling of travelling around the volcano.\n        </p>\n        <Link to={'/342-animation-on-3d-plot'}>\n          <img\n            src={volcanoGif}\n            alt=\"Animated volcano plot with Python\"\n            style={{ maxWidth: '900px', width: '100%' }}\n          />\n        </Link>\n      </Container>\n\n      <Spacing />\n\n      <Container>\n        <h2 id=\"&#8800; interaction\">\n          &#128161; Animation &#8800; Interaction\n        </h2>\n        <p>\n          There is a common confusion between what animated and interactive\n          charts are:\n        </p>\n        <ul>\n          <li>\n            <u>Animated</u> means a sequence of several static images is\n            displayed. The user can't do anything except watching those images.\n          </li>\n          <li>\n            <u>Interactive</u> means the user can interact with the chart: zoom\n            in, hover over a shape to get a tooltip, click to have a menu... The\n            user is not a spectator anymore, but also an actor.\n          </li>\n        </ul>\n        <Link to=\"/plotly\">\n          <Button size=\"sm\">Interactive Charts section</Button>\n        </Link>\n      </Container>\n\n      <Spacing />\n\n      <div className=\"greySection\" id=\"related\">\n        <Container>\n          <ChartFamilySection chartFamily=\"general\" />\n        </Container>\n      </div>\n\n      <Spacing />\n\n      <Container>\n        <Contact />\n      </Container>\n\n      <Spacing />\n    </Layout>\n  );\n}\n","export default __webpack_public_path__ + \"static/animated_volcano-df4d07818ba89edb4168e26f0160cdf4.gif\";"],"names":["SEO","_ref","title","seoDescription","keywords","React","lang","name","content","property","chartDescription","quickCode","homebrewInstallCode","Head","Correlogram","Layout","isTocEnabled","TitleAndDescription","description","Container","id","Row","className","Col","md","Link","to","src","gapminderGif","alt","style","width","CodeChunk","Button","size","Spacing","href","outerSpaceGIF","Matplotlib","basicScatterGif","maxWidth","volcanoGif","ChartFamilySection","chartFamily","Contact"],"sourceRoot":""}